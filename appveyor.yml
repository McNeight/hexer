# Based on https://www.appveyor.com/docs/appveyor-yml/ dated 19 Apr 2020
#
# Notes:
#   - Minimal appveyor.yml file is an empty file. All sections are optional.
#   - Indent each level of configuration with 2 spaces. Do not use tabs!
#   - All section names are case-sensitive.
#   - Section names should be unique on each level.

#---------------------------------#
#      general configuration      #
#---------------------------------#

# version format
version: 1.0.{build}

# you can use {branch} name in version format too
# version: 1.0.{build}-{branch}

# branches to build
branches:
  # whitelist
  only:
  - master

  # blacklist
  except:
    - gh-pages

# Do not build on tags (GitHub only)
skip_tags: true

# Start builds on tags only (GitHub, BitBucket, GitLab, Gitea)
skip_non_tags: true

# Skipping commits with particular message or from specific user
skip_commits:
  message: /Created.*\.(png|jpg|jpeg|bmp|gif)/      # Regex for matching commit message
  author: McNeight                                  # Commit author's username, name, email or regexp maching one of these.

# Including commits with particular message or from specific user
# only_commits:
#   message: /build/                # Start a new build if message contains 'build'
#   author: jack@company.com        # Start a new build for commit of user with email jack@company.com

# Skipping commits affecting specific files (GitHub only). More details here: /docs/appveyor-yml
#skip_commits:
#  files:
#    - docs/*
#    - '**/*.html'

# Including commits affecting specific files (GitHub only). More details here: /docs/appveyor-yml
#only_commits:
#  files:
#    - Project-A/
#    - Project-B/

# Do not build feature branch with open Pull Requests
skip_branch_with_pr: true

# Maximum number of concurrent jobs for the project
max_jobs: 1

#---------------------------------#
#    environment configuration    #
#---------------------------------#

image:
- Visual Studio 2019
- Visual Studio 2017
- Visual Studio 2015

# scripts that are called at very beginning, before repo cloning
init:
  - git config --global core.autocrlf input

# enable patching of *.csproj files
dotnet_csproj:
  patch: true
  file: '**\*.csproj'
  version: '{version}'
  package_version: '{version}'
  assembly_version: '{version}'
  file_version: '{version}'
  informational_version: '{version}'

# enable patching of AssemblyInfo.* files
assembly_info:
  patch: true
  file: AssemblyInfo.*
  assembly_version: "{version}"
  assembly_file_version: "{version}"
  assembly_informational_version: "{version}"

#---------------------------------#
#       build configuration       #
#---------------------------------#

# build platform, i.e. x86, x64, Any CPU. This setting is optional.
platform: Any CPU

# to add several platforms to build matrix:
#platform:
#  - x86
#  - Any CPU

# build Configuration, i.e. Debug, Release, etc.
configuration: Release

# to add several configurations to build matrix:
#configuration:
#  - Debug
#  - Release

# Build settings, not to be confused with "before_build" and "after_build".
# "project" is relative to the original build directory and not influenced by directory changes in "before_build".
build:
  parallel: true                  # enable MSBuild parallel builds
  project: Hexer.sln              # path to Visual Studio solution or project
  # MSBuild verbosity level
  verbosity: detailed
  
# scripts to run before build
before_build:
- cmd: dotnet restore Hexer.sln

#---------------------------------#
#      artifacts configuration    #
#---------------------------------#

artifacts:

  # pushing entire folder as a zip archive
  - path: artifacts

#---------------------------------#
#     deployment configuration    #
#---------------------------------#

# providers: Local, FTP, WebDeploy, AzureCS, AzureBlob, S3, NuGet, Environment
# provider names are case-sensitive!
deploy:
    # Deploy to GitHub Releases
  - provider: GitHub
    artifact: /.*\.zip/             # upload all zip files to release assets
    draft: true
    prerelease: true
    on:
      branch: master                # release from master branch only
      APPVEYOR_REPO_TAG: true       # deploy on tag push only

#---------------------------------#
#         notifications           #
#---------------------------------#

notifications:

    # Email
    - provider: Email
      to:
        - mcneight+appveyor@gmail.com
      subject: Build {{status}}
      message: Version {{version}} {{commitId}} from {{branch}} {{status}} {{message}}
      on_build_success: true
      on_build_failure: true
      on_build_status_changed: true
